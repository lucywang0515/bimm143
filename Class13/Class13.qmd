---
title: "Class13"
author: "Lucy Wang"
format: pdf
---
# Mini Project



# Data import

```{r}
colData <- read.csv("GSE37704_metadata.csv", row.names = 1)
head(colData)
```



```{r}
countDataa <- read.csv("GSE37704_featurecounts.csv", row.names = 1)
head(countDataa)
```


> Q1. Complete the code below to remove the troublesome first column from countData

```{r}
#Get rid of the first column to match the colData
countData <- as.matrix(countDataa[-1])
head(countData)
```

Check that my metadata and count data **match**

```{r}
rownames(colData) == colnames(countData)
```

> Q2. Complete the code below to filter countData to exclude genes (i.e. rows) where we have 0 read count across all samples (i.e. columns).

```{r}
#Remember to add a comma, or it will return a 1 dimension vector
#Better to write out a vector first, see `to.keep`
to.keep <- rowSums(countData) != 0
countData = countData[to.keep, ]
head(countData)
```

# DESeq Analysis

```{r}
library(DESeq2)
```

```{r}
dds <- DESeqDataSetFromMatrix(countData = countData,
                              colData = colData,
                              design = ~condition)
```
Run analysis and get results
```{r}
dds <- DESeq(dds)
res <- results(dds)
head(res)
```
# Volcano plot:
```{r}
plot(res$log2FoldChange, -log(res$padj),
     xlab = "log2(FoldChange)",
     ylab = "adjusted p-value")
```

Add some colors to highlight the subset genes of significant high fold change values:
```{r}
mycols <- rep("gray", nrow(res))
mycols[abs(res$log2FoldChange) > 2] <- "purple"
mycols[res$padj > 0.05] = "gray"
  
plot(res$log2FoldChange, -log(res$padj), col = mycols,
     xlab = "log2(FoldChange)",
     ylab = "adjusted p-value")
#Add lines
#`lty` for line types: lty=1 straight line, ...
abline(v=c(-2,2), lty=2)
```

# Add gene annotation data

Load `AnnotationDbi` and `Human genome package`
```{r}
library(AnnotationDbi)
library(org.Hs.eg.db)
```

```{r}
columns(org.Hs.eg.db)
```
> Q. Use the mapIDs() function multiple times to add SYMBOL, ENTREZID and GENENAME annotation to our results by completing the code below.



```{r}
res$symbol = mapIds(org.Hs.eg.db,
                    keys=row.names(res), 
                    keytype="ENSEMBL",
                    column="SYMBOL",
                    multiVals="first")

res$entrez = mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype="ENSEMBL",
                    column="ENTREZID",
                    multiVals="first")

res$name =   mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype="ENSEMBL",
                    column="GENENAME",
                    multiVals="first")

head(res, 10)
```

> Q. Finally for this section let's reorder these results by adjusted p-value and save them to a CSV file in your current project directory.

```{r}
ord <- order( res$padj )
res = res[order(res$pvalue),]
write.csv(res[ord,], "deseq_results.csv")
```


# Pathway Analysis

```{r}
library(pathview)
library(gage)
library(gageData)
```

```{r}
data(kegg.sets.hs)
data(sigmet.idx.hs)

# Focus on signaling and metabolic pathways only
kegg.sets.hs = kegg.sets.hs[sigmet.idx.hs]

# Examine the first 3 pathways
head(kegg.sets.hs, 3)
```


```{r}
foldchanges = res$log2FoldChange
names(foldchanges) = res$entrez
head(foldchanges)
```

```{r}
keggres = gage(foldchanges, gsets=kegg.sets.hs)
```

```{r}
attributes(keggres)
```

```{r}
# Look at the first few down (less) pathways
head(keggres$less)
```

```{r}
pathview(gene.data=foldchanges, pathway.id="hsa04110")
```

> Q. Can you do the same procedure as above to plot the pathview figures for the top 5 down-reguled pathways?

```{r}
pathview(gene.data=foldchanges, pathway.id="hsa04110", kegg.native=FALSE)
```

!["hsa04110"](hsa04110.pathview.png)


## Focus on top 5 upregulated pathways here for demo purposes only
```{r}
keggrespathways <- rownames(keggres$less)[1:5]

# Extract the 8 character long IDs part of each string
keggresids = substr(keggrespathways, start=1, stop=8)
keggresids
```

```{r}
pathview(gene.data=foldchanges, pathway.id=keggresids, species="hsa")
```

```{r}
pathview(gene.data=foldchanges, pathway.id="hsa03030")
pathview(gene.data=foldchanges, pathway.id="hsa03013")
pathview(gene.data=foldchanges, pathway.id="hsa03440")
pathview(gene.data=foldchanges, pathway.id="hsa04114")
```

!["hsa03030"](hsa03030.pathview.png)
!["hsa3013"](hsa03013.pathview.png)
!["hsa03440"](hsa03440.pathview.png) 
!["hsa04114"](hsa04114.pathview.png)
 
<reactome.org> - pathways website

# Gene Ontology (GO)

```{r}
data(go.sets.hs)
data(go.subs.hs)

# Focus on Biological Process subset of GO
gobpsets = go.sets.hs[go.subs.hs$BP]

gobpres = gage(foldchanges, gsets=gobpsets, same.dir=TRUE)

lapply(gobpres, head)
```

# Reactome Analysis


```{r}
sig_genes <- res[res$padj <= 0.05 & !is.na(res$padj), "symbol"]
print(paste("Total number of significant genes:", length(sig_genes)))
```

```{r}
write.table(sig_genes, file="significant_genes.txt", row.names=FALSE, col.names=FALSE, quote=FALSE)
```

Then, to perform pathway analysis online go to the Reactome website (https://reactome.org/PathwayBrowser/#TOOL=AT). Select “choose file” to upload your significant gene list. Then, select the parameters “Project to Humans”, then click “Analyze”.

> Q: What pathway has the most significant “Entities p-value”? Do the most significant pathways listed match your previous KEGG results? What factors could cause differences between the two methods?

Most significant "Entities p-values": Endosomal/Vacuolar pathway

They kind of match, but not exactly. One of the top 5 down-regulated genes is nucleo-cytoplasmic transport which is related but others are not so related.

Differences cause by analyzing against different databases.(?)
